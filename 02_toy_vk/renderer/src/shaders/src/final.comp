#version 460

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba32f) uniform readonly image2D inputImage;
layout(set = 0, binding = 1, rgba8) uniform writeonly image2D outputImage;

layout(push_constant) uniform PushConstants { uint sample_count; }
pushConstants;

void main() {
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 dimensions = imageSize(inputImage);
  if (pixel_coords.x >= dimensions.x || pixel_coords.y >= dimensions.y) {
    return;
  }

  // Flip the image vertically.
  ivec2 load_coords = ivec2(pixel_coords.x, dimensions.y - pixel_coords.y - 1);

  // divide color by sample count
  vec3 color = imageLoad(inputImage, load_coords).rgb;
  if (pushConstants.sample_count > 1) {
    color /= pushConstants.sample_count;
  }
  imageStore(outputImage, pixel_coords, vec4(color, 1.0));
}
