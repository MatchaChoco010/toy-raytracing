#version 460
#extension GL_EXT_ray_tracing : enable

layout(location = 0) rayPayloadEXT vec3 hitValue;

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;

layout(push_constant) uniform PushConstants {
  mat4 cameraRotate;
  vec3 cameraTranslate;
  uint seed;
}
pushConstants;

uint seed;
uint PCGHash() {
  seed = seed * 747796405u + 2891336453u;
  uint state = seed;
  uint word = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
  return (word >> 22u) ^ word;
}

float rnd1() { return PCGHash() / float(0xFFFFFFFFU); }

vec2 rnd2() { return vec2(rnd1(), rnd1()); }

void main() {
  seed = pushConstants.seed + gl_LaunchIDEXT.x +
         gl_LaunchSizeEXT.x * gl_LaunchIDEXT.y;

  const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
  vec2 delta = rnd2() - vec2(0.5);
  vec2 inUV = (pixelCenter + delta) / vec2(gl_LaunchSizeEXT.xy);
  vec2 d = inUV * 2.0 - 1.0;
  d.x *= float(gl_LaunchSizeEXT.x) / float(gl_LaunchSizeEXT.y);

  vec3 origin = pushConstants.cameraTranslate;
  vec3 direction = normalize(vec3(d.x, d.y, -2.0));
  direction = (pushConstants.cameraRotate * vec4(direction, 0.0)).xyz;
  float tmin = 0.001;
  float tmax = 100000.0;

  traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT,
              0xff, // mask
              0,    // sbtRecordOffset
              0,    // sbtRecordStride
              0,    // missIndex
              origin, tmin, direction, tmax,
              0 // payload location
  );

  vec4 prev = imageLoad(image, ivec2(gl_LaunchIDEXT.xy));
  imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(prev.rgb + hitValue, 1.0));
}
