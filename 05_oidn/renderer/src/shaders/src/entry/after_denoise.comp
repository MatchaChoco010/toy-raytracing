#version 460
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_shader_explicit_arithmetic_types : enable
#extension GL_EXT_buffer_reference2 : require
#extension GL_EXT_scalar_block_layout : enable

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba32f) uniform writeonly image2D inputImages[];

layout(buffer_reference, scalar) buffer readonly OutputBuffer { vec3 v[]; };

layout(push_constant) uniform PushConstants {
  uint outputImageIndex;
  uint[1] padding;
  uint64_t outputBufferIndex;
}
pushConstants;

// bufferからimageにコピーする
void main() {
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 dimensions = imageSize(inputImages[pushConstants.outputImageIndex]);
  if (pixel_coords.x >= dimensions.x || pixel_coords.y >= dimensions.y) {
    return;
  }
  uint index = pixel_coords.y * dimensions.x + pixel_coords.x;

  OutputBuffer outputBuffer = OutputBuffer(pushConstants.outputBufferIndex);
  vec3 color = outputBuffer.v[index];
  imageStore(inputImages[pushConstants.outputImageIndex], pixel_coords,
             vec4(color, 1.0));
}
