#version 460
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba32f) uniform readonly image2D inputImages[];
layout(set = 0, binding = 0, rgba32f) uniform writeonly image2D outputImages[];

layout(push_constant) uniform PushConstants {
  uint inputIndex;
  uint outputIndex;
  uint sampleCount;
}
pushConstants;

// サンプル総数で割って出力する。
void main() {
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 dimensions = imageSize(inputImages[pushConstants.inputIndex]);
  if (pixel_coords.x >= dimensions.x || pixel_coords.y >= dimensions.y) {
    return;
  }

  // divide color by sample count
  vec3 color =
      imageLoad(inputImages[pushConstants.inputIndex], pixel_coords).rgb;
  if (pushConstants.sampleCount > 1) {
    color /= pushConstants.sampleCount;
  }

  // store the result
  imageStore(outputImages[pushConstants.outputIndex], pixel_coords,
             vec4(color, 1.0));
}
